{"version":3,"sources":["components/CourseDetail.js","components/Course.js","components/Courses.js","components/FormErrors.js","components/CreateCourse.js","components/Header.js","components/UpdateCourse.js","components/UserSignIn.js","components/UserSignOut.js","components/UserSignUp.js","components/NotFound.js","Context.js","components/PrivateRoute.js","components/UnhandledError.js","components/Forbidden.js","components/DeleteCourse.js","App.js","serviceWorker.js","index.js"],"names":["ReactMarkdown","require","CourseDetail","state","course","this","props","context","match","actions","getCourses","params","id","then","data","history","push","setState","catch","err","capitalizedFirstName","capitalizedLastName","authUserId","ownerId","title","description","estimatedTime","materialsNeeded","owner","authenticatedUser","firstName","charAt","toUpperCase","slice","lastName","className","href","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","d","source","renderers","textarea","name","placeholder","React","Component","Course","cx","cy","r","Courses","courses","returnCourses","map","key","x","y","transform","FormErrors","errArr","errors","error","undefined","length","i","CreateCourse","userId","change","e","target","value","submit","preventDefault","body","postCourse","persist","courseId","onSubmit","type","onChange","onClick","Header","UpdateCourse","isOwner","putCourse","from","location","UserSignIn","emailAddress","password","username","pathname","signIn","user","UserSignOut","signOut","to","UserSignUp","confirmPassword","a","postUser","NotFound","Context","createContext","Provider","Cookies","getJSON","api","url","method","requiresAuth","credentials","options","mode","headers","JSON","stringify","encryptedCredentials","btoa","fetch","getUser","set","expires","remove","response","status","json","Error","customError","deleteCourse","children","Consumer","withContext","PrivateRoute","component","rest","render","UnhandledError","Forbidden","DeleteCourse","isOwnerDeleteCourse","HeaderWithContext","CoursesWithContext","CreateCourseWithContext","CourseDetailWithContext","UpdateCourseWithContext","UserSignInWithContext","UserSignUpWithContext","UserSignOutWithContext","DeleteCourseWithContext","App","exact","path","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ecb2711f.chunk.js","sourcesContent":["import React from 'react';\r\nconst ReactMarkdown = require('react-markdown');\r\n\r\nexport default class CourseDetail extends React.Component {\r\n\r\n  state = {\r\n    course: {},\r\n  }\r\n\r\n  // retrieves course data by id parameter\r\n  componentDidMount() {\r\n    const { context, match } = this.props;\r\n    \r\n    context.actions.getCourses(match.params.id)\r\n    .then(data => {\r\n      if (data === null) {\r\n        this.props.history.push(\"/notfound\");\r\n      } else {\r\n        this.setState({\r\n          course: data\r\n        });\r\n      }\r\n    })\r\n    .catch(err => {\r\n      this.props.history.push(\"/error\");\r\n    }); \r\n  }\r\n\r\n  render(){\r\n    const { context } = this.props;\r\n    const { course } = this.state;\r\n    const { id, title, description, estimatedTime, materialsNeeded, owner } = course;\r\n \r\n    let capitalizedFirstName;\r\n    let capitalizedLastName;\r\n    let authUserId;\r\n    let ownerId;\r\n\r\n    if (context.authenticatedUser) {\r\n      authUserId = context.authenticatedUser.id;\r\n    }\r\n    \r\n    if (owner) {\r\n      capitalizedFirstName = owner.firstName.charAt(0).toUpperCase() + owner.firstName.slice(1);\r\n      capitalizedLastName = owner.lastName.charAt(0).toUpperCase() + owner.lastName.slice(1);\r\n      ownerId = owner.id;\r\n    }\r\n\r\n    return(\r\n      <div className=\"actions--bar\">\r\n        <div className=\"bounds\">\r\n          <div className=\"grid-100\">\r\n            <div className=\"button-container\">\r\n              <a className=\"button back-button\" href=\"/\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-arrow-left\">\r\n                  <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\r\n                  <polyline points=\"12 19 5 12 12 5\"></polyline>\r\n                </svg>\r\n                <span>Back</span>\r\n              </a>\r\n                {\r\n                  authUserId && ownerId === authUserId ?\r\n                    <>\r\n                      <a className=\"button update-button\" href={`/courses/${ id }/update`}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-edit\">\r\n                          <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n                          <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n                        </svg>\r\n                        <span>Edit Course</span>\r\n                      </a>\r\n                      <a className=\"button delete-button\" href={`/courses/${ id }/delete`}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-trash-2\">\r\n                          <polyline points=\"3 6 5 6 21 6\"></polyline>\r\n                          <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\r\n                          <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\r\n                        </svg>\r\n                        <span>Delete Course</span>\r\n                      </a>  \r\n                    </> \r\n                  :\r\n                  null               \r\n                }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid--style\">\r\n          <div className=\"bounds course--detail view\">\r\n              <div className=\"grid-66\">\r\n                <div className=\"course--header\">\r\n                  <h1 className=\"main--heading--details\">{ title }</h1>\r\n                  <div className=\"course--author--container\">\r\n                    <p>By <span className=\"course--author\">{ `${capitalizedFirstName} ${capitalizedLastName}` }</span></p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"course--description\">\r\n                  <ReactMarkdown source={ description } />\r\n                </div>\r\n              </div>\r\n            <div className=\"grid-25 grid-right\">\r\n              <div className=\"course--stats\">\r\n                <ul className=\"course--stats--list\">\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h2>Time</h2>\r\n                    <span>{ estimatedTime }</span>\r\n                  </li>\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h2>Materials Needed</h2>\r\n                    <ul>\r\n                      {\r\n                        materialsNeeded ? \r\n                          <ReactMarkdown source={ materialsNeeded } renderers={{textarea: props => <textarea id=\"materialsNeeded\" name=\"materialsNeeded\" className=\"\" placeholder=\"List materials...\"\r\n                          />}} /> \r\n                        :\r\n                        null\r\n                      }\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nconst Course = (props) => {\r\n  const { id, title, description, owner, firstName, lastName, context } = props;\r\n  let capitalizedFirstName;\r\n  let capitalizedLastName;\r\n  let authUserId;\r\n  let ownerId;\r\n\r\n  if (context.authenticatedUser) {\r\n    authUserId = context.authenticatedUser.id;\r\n  }\r\n  \r\n  if (owner) {\r\n    capitalizedFirstName = firstName.charAt(0).toUpperCase() + firstName.slice(1);\r\n    capitalizedLastName = lastName.charAt(0).toUpperCase() + lastName.slice(1);\r\n    ownerId = owner.id;\r\n  }\r\n\r\n  return(\r\n    <div className=\"grid-33\">\r\n            {\r\n              authUserId && ownerId === authUserId ?\r\n              <a className=\"course--module course--link course--editable\" href={`/courses/${ id }`}>\r\n                <h2 className=\"course--title\">{ title }</h2>\r\n                <div className=\"course--description-container\">\r\n                  <h4 className=\"course--description\">{ description }</h4>\r\n                </div>\r\n                <div className=\"course--extras\">\r\n                  <h5 className=\"course--author--card\">{`${capitalizedFirstName} ${capitalizedLastName}`}</h5>\r\n                  <div className=\"course--option course--option--editable\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-edit\">\r\n                      <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n                      <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n                    </svg>\r\n                    <h5>Editable</h5>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n              :\r\n              <a className=\"course--module course--link\" href={`/courses/${ id }`}>\r\n                <h2 className=\"course--title\">{ title }</h2>\r\n                <h4 className=\"course--description\">{ description }</h4>\r\n                <div className=\"course--extras\">\r\n                  <h5 className=\"course--author--card\">{`${capitalizedFirstName} ${capitalizedLastName}`}</h5>\r\n                  <div className=\"course--option course--option--view\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#979797\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin =\"round\" className=\"feather feather-eye\">\r\n                      <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n                      <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n                    </svg>\r\n                    <h5>View Only</h5>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n            }\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default Course;","import React from 'react';\r\nimport Course from './Course';\r\n\r\nexport default class Courses extends React.Component {\r\n\r\n  state = {\r\n    courses: []\r\n  }\r\n\r\n  // calls \"getCourses\" from context\r\n  // sets \"courses\" state to data received back\r\n  componentDidMount() {\r\n    const { context } = this.props;\r\n    context.actions.getCourses()\r\n      .then(data => {\r\n        this.setState({courses: data});\r\n      })\r\n      .catch(err => {\r\n        this.props.history.push(\"/error\");\r\n      });;\r\n  }\r\n\r\n  // Returns list of courses\r\n  returnCourses = () => {\r\n    const { context } = this.props;\r\n    const { courses } = this.state;\r\n    const courseData = courses.map(course => \r\n      <Course \r\n        key={course.id} \r\n        id={course.id} \r\n        title={course.title}\r\n        description={course.description}\r\n        owner={course.owner}\r\n        firstName={course.owner.firstName}\r\n        lastName={course.owner.lastName}\r\n        context={context} />\r\n    );\r\n\r\n    return courseData;\r\n  }\r\n\r\n  render() {\r\n    const { courses } = this.state;\r\n\r\n    return(\r\n      <div className=\"bounds\">\r\n        <div className=\"heading--section\">\r\n          <h1 className=\"main--heading\">Courses</h1>\r\n          <div>\r\n            <a className=\"button create-button\" href=\"/courses/create\">\r\n              <svg width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <rect x=\"7\" y=\"14\" width=\"14\" height=\"2\" transform=\"rotate(-90 7 14)\" fill=\"black\"/>\r\n                <rect x=\"0.5\" y=\"6\" width=\"14.5\" height=\"2\" fill=\"black\"/>\r\n              </svg>\r\n              <span>Create Course</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"course--grid\">\r\n          { \r\n            courses ? \r\n            this.returnCourses()\r\n            : \r\n            null \r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nconst FormErrors = ({ errors }) => {\r\n\r\n  const errArr = errors.error;\r\n\r\n  if (errArr === undefined || errArr.length === 0) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h2 className=\"validation--errors--label\">Validation errors</h2>\r\n        <div className=\"validation-errors\">\r\n          <ul>\r\n            { errArr.map( (err, i) => <li key={i}>{ err }</li>) }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormErrors;","import React from 'react';\r\nimport FormErrors from './FormErrors';\r\n\r\nclass CreateCourse extends React.Component {\r\n\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    estimatedTime: \"\",\r\n    materialsNeeded: \"\",\r\n    userId: \"\",\r\n    errors: []\r\n  }\r\n\r\n  // updates specific state property with user's input value\r\n  change = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  submit = (e) => {\r\n    e.preventDefault();\r\n    const { title, description, estimatedTime, materialsNeeded } = this.state;\r\n    const { context } = this.props;\r\n\r\n    const body = {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      userId: context.authenticatedUser.id\r\n    };\r\n\r\n    context.actions.postCourse(body)\r\n    .then(data => {\r\n      if (data.error) {\r\n        e.persist();\r\n        const error = {error: data.error};\r\n        this.setState({ errors: error });\r\n      } else if (data.course) {\r\n        const courseId = data.course.id;\r\n        this.props.history.push(`/courses/${ courseId }`);\r\n      }\r\n    })\r\n    .catch(err => {\r\n      this.props.history.push(\"/error\");\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const { title, description, estimatedTime, materialsNeeded, errors } = this.state;\r\n\r\n    return(\r\n      <div className=\"bounds course--detail\">\r\n        <h1 className=\"main--heading\">Create Course</h1>\r\n        <div>\r\n          <FormErrors errors={ errors } />\r\n          <form onSubmit={(e) => this.submit(e)}>\r\n            <div className=\"grid-66\">\r\n              <div className=\"course--header\">\r\n                <h5 className=\"course--label\">Title</h5>\r\n                <div>\r\n                  <input id=\"title\" name=\"title\" type=\"text\" className=\"input-title course--title--input\" placeholder=\"Title...\"\r\n                    onChange={(e) => this.change(e)} value={ title } />\r\n                </div>\r\n              </div>\r\n              <div className=\"course--description\">\r\n                <h5 className=\"course--label\">Description</h5>\r\n                <div>\r\n                  <textarea id=\"description\" name=\"description\" className=\"\" placeholder=\"Description...\"\r\n                    onChange={(e) => this.change(e)} value={ description } />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-25 grid-right\">\r\n              <div className=\"course--stats\">\r\n                <ul className=\"course--stats--list\">\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h5 className=\"course--label\">Estimated Time</h5>\r\n                    <div>\r\n                      <input id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" className=\"course--time--input\"\r\n                        onChange={(e) => this.change(e)} placeholder=\"Hours\" value={ estimatedTime } />\r\n                    </div>\r\n                  </li>\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h5 className=\"course--label\">Materials Needed</h5>\r\n                    <div>\r\n                      <textarea id=\"materialsNeeded\" name=\"materialsNeeded\" className=\"\" placeholder=\"Ex: * material 1\"\r\n                        onChange={(e) => this.change(e)} value={ materialsNeeded } />\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-100 pad-bottom\">\r\n              <div className=\"button-container\">\r\n                <button className=\"button create-button\" type=\"submit\">Create Course</button>\r\n                <button className=\"button cancel-button\" onClick={(e) => {e.preventDefault(); this.props.history.push('/')}}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateCourse;","import React from 'react';\r\n\r\nconst Header = (props) => {\r\n  const { context } = props;\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"bounds\">\r\n        <a href=\"/\">Courses</a>\r\n        <nav>\r\n          {\r\n            context.authenticatedUser !== null ?\r\n            <>\r\n              <span>Welcome { context.authenticatedUser.firstName.charAt(0).toUpperCase() + context.authenticatedUser.firstName.slice(1) }</span>\r\n              <a href=\"/signout\">Sign Out</a>\r\n            </>\r\n            :\r\n            <>\r\n              <a className=\"signin\" href=\"/signin\">Sign In</a>\r\n              <a className=\"signup\" href=\"/signup\">Sign Up</a>\r\n            </>\r\n          }\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport FormErrors from './FormErrors';\r\n\r\nclass UpdateCourse extends React.Component {\r\n\r\n  state = {\r\n    id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    estimatedTime: \"\",\r\n    materialsNeeded: \"\",\r\n    userId: \"\",\r\n    errors: [],\r\n    owner: \"\"\r\n  }\r\n\r\n  // updates specific state property with user's input value\r\n  change = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  // returns true if authorized (signed in) user owns the current course selected\r\n  isOwner = (data, context) => {\r\n    if (data.owner.id === context.authenticatedUser.id) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { context, match } = this.props;\r\n    const { id } = match.params;\r\n\r\n    context.actions.getCourses(id)\r\n    .then(data => {\r\n      if (data === null) {\r\n        this.props.history.push(\"/notfound\");\r\n      } else {\r\n        let isOwner = this.isOwner( data, context );\r\n        \r\n        // if true, set data properties to state\r\n        // else, display \"forbidden\" page to user\r\n        if (isOwner) {\r\n          this.setState({\r\n            id: data.id,\r\n            title: data.title,\r\n            description: data.description,\r\n            estimatedTime: data.estimatedTime,\r\n            materialsNeeded: data.materialsNeeded,\r\n            userId: data.userId,\r\n            owner: data.owner\r\n          });\r\n        } else {\r\n          this.props.history.push(\"/forbidden\");\r\n        }\r\n      }\r\n    })\r\n    .catch(err => {\r\n      this.props.history.push(\"/error\");\r\n    });\r\n  }\r\n\r\n  submit = (e) => {\r\n    e.preventDefault();\r\n    const { context } = this.props;\r\n    const { id, title, description, estimatedTime, materialsNeeded, userId } = this.state;\r\n\r\n    const body = {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      userId\r\n    };\r\n\r\n    context.actions.putCourse(id, body)\r\n    .then(error => {\r\n      if (error) {\r\n        e.persist();\r\n        this.setState({ errors: error });\r\n      } else {\r\n        this.props.history.push(`/courses/${ id }`);\r\n      }\r\n    })\r\n    .catch(err => this.props.history.push(\"/error\"));\r\n  } \r\n\r\n\r\n  render() {\r\n    const { id, title, description, estimatedTime, materialsNeeded, errors } = this.state;\r\n    const { from } = this.props.location.state || { from: `/courses/${ id }` };\r\n\r\n    return(\r\n      <div className=\"bounds course--detail\">\r\n        <h1>Edit Course</h1>\r\n        <div>\r\n          <FormErrors errors={ errors } />\r\n          <form onSubmit={ (e) => this.submit(e) }>\r\n            <div className=\"grid-66\">\r\n              <div className=\"course--header\">\r\n                <h5 className=\"course--label\">Title</h5>\r\n                <div>\r\n                  <input \r\n                    id=\"title\" name=\"title\" type=\"text\" className=\"input-title course--title--input\" placeholder=\"Title...\"\r\n                    value={ title } onChange={ (e) => this.change(e) }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"course--description\">\r\n                <h5 className=\"course--label\">Description</h5>\r\n                <div>\r\n                  <textarea \r\n                    id=\"description\" name=\"description\" className=\"\" placeholder=\"Description...\" value={ description } onChange={ (e) => this.change(e) }>\r\n                  </textarea>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-25 grid-right\">\r\n              <div className=\"course--stats\">\r\n                <ul className=\"course--stats--list\">\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h5 className=\"course--label\">Time</h5>\r\n                    <div>\r\n                      <input \r\n                        id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" className=\"course--time--input\"\r\n                        placeholder=\"Hours\" value={ estimatedTime } onChange={ (e) => this.change(e) }\r\n                      />\r\n                    </div>\r\n                  </li>\r\n                  <li className=\"course--stats--list--item\">\r\n                    <h5 className=\"course--label\">Materials Needed</h5>\r\n                    <div>\r\n                      <textarea \r\n                        id=\"materialsNeeded\" name=\"materialsNeeded\" className=\"\" placeholder=\"Ex: * material 1\"\r\n                        value={ materialsNeeded } onChange={ (e) => this.change(e) }>\r\n                      </textarea>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid-100 pad-bottom\">\r\n              <div className=\"button-container\">\r\n                <button className=\"button save-button\" type=\"submit\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-save\">\r\n                    <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path>\r\n                    <polyline points=\"17 21 17 13 7 13 7 21\"></polyline>\r\n                    <polyline points=\"7 3 7 8 15 8\"></polyline>\r\n                  </svg>\r\n                  <span>Save</span>\r\n                </button>\r\n                <button className=\"button cancel-button\" onClick={(e) => {e.preventDefault(); this.props.history.push(from)}}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateCourse;","import React from 'react';\r\nimport FormErrors from './FormErrors';\r\n\r\nclass UserSignIn extends React.Component {\r\n\r\n  state = {\r\n    emailAddress: \"\",\r\n    password: \"\",\r\n    errors: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { context, history } = this.props;\r\n    if (context.authenticatedUser !== null) {\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  // updates specific state property with user's input value\r\n  change = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  submit = (e, username, password) => {\r\n    e.preventDefault();\r\n    const { context } = this.props;\r\n    const { from } = this.props.location.state || {from: { pathname: '/' }}; \r\n\r\n    context.actions.signIn(username, password)\r\n      .then(user => {\r\n        if (user === null) {\r\n          e.persist(); // Keeps reference of synthetic event within an async callback\r\n          this.setState({ errors: {error: [\"Sign-in unsuccessful.\"]} });\r\n        } else {\r\n          e.persist();\r\n          this.props.history.push(from);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.props.history.push(\"/error\");\r\n      });\r\n  }\r\n\r\n  render(){\r\n    const { emailAddress, password, errors } = this.state;\r\n\r\n    return(\r\n      <div className=\"bounds\">\r\n        <div className=\"grid-33 centered signin\">\r\n          <h2 className=\"heading--signin\">Sign In</h2>\r\n          <div>\r\n            <FormErrors errors={ errors } />\r\n            <form onSubmit={ (e) => this.submit(e, emailAddress, password) }>\r\n              <div>\r\n                <input \r\n                  id=\"emailAddress\" name=\"emailAddress\" type=\"text\" className=\"\" placeholder=\"Email Address\" value={ emailAddress }\r\n                  onChange={ (e) => this.change(e) }  \r\n                />\r\n              </div>\r\n              <div>\r\n                <input \r\n                  id=\"password\" name=\"password\" type=\"password\" className=\"\" placeholder=\"Password\" value={ password }\r\n                  onChange={ (e) => this.change(e) }  \r\n                />\r\n              </div>\r\n              <div className=\"grid-100 pad-bottom\">\r\n                <div className=\"button-container\">\r\n                  <button className=\"button signin-button\" type=\"submit\">Sign In</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <p>&nbsp;</p>\r\n          <p>Don't have a user account? <a href=\"/signup\">Click here</a> to sign up!</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserSignIn;","import React from 'react';\r\nimport {\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nconst UserSignOut = (props) => {\r\n\r\n  const { context } = props;\r\n  context.actions.signOut();\r\n\r\n  return (\r\n    <Redirect to=\"/\" />\r\n  );\r\n}\r\n\r\nexport default UserSignOut;","import React from 'react';\r\nimport FormErrors from './FormErrors';\r\n\r\nclass UserSignUp extends React.Component {\r\n\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    emailAddress: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    errors: []\r\n  }\r\n\r\n  // updates specific state property with user's input value\r\n  change = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  submit = async (e, body) => {\r\n    const { context, history } = this.props;\r\n    const { emailAddress, password, confirmPassword } = this.state;\r\n    const { from } = this.props.location.state || {from: { pathname: '/' }}; \r\n\r\n    e.preventDefault();\r\n    context.actions.postUser(body, password, confirmPassword)\r\n      .then(errors => {\r\n        e.persist();\r\n        if (errors !== null) {\r\n          this.setState({ errors: errors });\r\n        } else {\r\n          context.actions.signIn(emailAddress, password)\r\n            .then(() => {\r\n              history.push(from);\r\n            })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.props.history.push(\"/error\");\r\n      });;\r\n  }\r\n\r\n  render() {\r\n    const { firstName, lastName, emailAddress, password, confirmPassword, errors } = this.state;\r\n    const body = { firstName, lastName, emailAddress, password, confirmPassword };\r\n\r\n    return(\r\n      <div className=\"bounds\">\r\n        <div className=\"grid-33 centered signin\">\r\n          <h2 className=\"heading--signup\">Sign Up</h2>\r\n          <div>\r\n            <FormErrors errors={ errors } />\r\n            <form onSubmit={ (e) => this.submit(e, body) }>\r\n              <div>\r\n                <input \r\n                  id=\"firstName\" name=\"firstName\" type=\"text\" className=\"\" placeholder=\"First Name\" value={ firstName }\r\n                  onChange={ (e) => this.change(e) }\r\n                />\r\n              </div>\r\n              <div>\r\n                <input \r\n                  id=\"lastName\" name=\"lastName\" type=\"text\" className=\"\" placeholder=\"Last Name\" value={ lastName }\r\n                  onChange={ (e) => this.change(e) }\r\n                />\r\n              </div>\r\n              <div>\r\n                <input \r\n                  id=\"emailAddress\" name=\"emailAddress\" type=\"text\" className=\"\" placeholder=\"Email Address\" value={ emailAddress }\r\n                  onChange={ (e) => this.change(e) }  \r\n                />\r\n              </div>\r\n              <div>\r\n                <input \r\n                  id=\"password\" name=\"password\" type=\"password\" className=\"\" placeholder=\"Password\" value={ password }\r\n                  onChange={ (e) => this.change(e) }\r\n                />\r\n              </div>\r\n              <div>\r\n                <input \r\n                  id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" className=\"\" placeholder=\"Confirm Password\"\r\n                  value={ confirmPassword } onChange={ (e) => this.change(e) }\r\n                />\r\n              </div>\r\n              <div className=\"grid-100 pad-bottom\">\r\n                <div className=\"button-container\">\r\n                  <button className=\"button signup-button\" type=\"submit\">Sign Up</button>\r\n                  <button className=\"button cancel-button\" onClick={(e) => { e.preventDefault(); this.props.history.push('/') }}>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <p>&nbsp;</p>\r\n          <p>Already have a user account? <a href=\"/signin\">Click here</a> to sign in!</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserSignUp;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return(\r\n    <div className=\"bounds\">\r\n      <div className=\"message--container\">\r\n        <div className=\"message--text\">\r\n          <h1>404</h1>\r\n          <h1>Page Not Found.</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport const Context = React.createContext(); \r\n\r\nexport class Provider extends Component {\r\n\r\n  state = {\r\n    authenticatedUser: Cookies.getJSON('authenticatedUser') || null,\r\n    password: Cookies.getJSON('password') || null\r\n  }\r\n\r\n  // helper function that handles all api calls\r\n  // returns response from api\r\n  api = async (url, method, body = null, requiresAuth = false, credentials = null) => {\r\n    const options = {\r\n      method: method, \r\n      mode: 'cors', \r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    // convert body to JSON\r\n    if (body !== null) {\r\n      options.body = JSON.stringify(body);\r\n    }\r\n\r\n    // if authorization is required, encrypt user credentials\r\n    if (requiresAuth === true) {\r\n      const encryptedCredentials = btoa(`${credentials.emailAddress}:${credentials.password}`);\r\n      options.headers[\"Authorization\"] = `Basic ${encryptedCredentials}`;\r\n    }\r\n\r\n    return fetch(url, options);\r\n  }\r\n\r\n  // sets and saves user identification throughout app if credentials are valid\r\n  signIn = async (username, password) => {\r\n    const user = await this.getUser(username, password);\r\n    if (user) {\r\n      this.setState({ \r\n      authenticatedUser: {\r\n        id: user.id,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        emailAddress: user.emailAddress,\r\n        password: password\r\n      },\r\n      password: password\r\n      }, () => {\r\n        Cookies.set('authenticatedUser', JSON.stringify(user), { expires: 1 });\r\n        Cookies.set('password', JSON.stringify(password), { expires: 1 });\r\n      });\r\n    } else {\r\n      return user;\r\n    }\r\n  }\r\n\r\n  signOut = () => {\r\n    this.setState({authenticatedUser: null, password: null});\r\n    Cookies.remove('authenticatedUser');\r\n    Cookies.remove('password');\r\n  }\r\n\r\n  // GET user by credentials\r\n  getUser = async (emailAddress, password) => {\r\n    const response = await this.api(\"https://course-platform-server.herokuapp.com/api/users\", 'GET', null, true, { emailAddress, password });\r\n    if (response.status === 200) {\r\n      return response.json();\r\n    } else if (response.status === 401) {\r\n      return null;\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  } \r\n\r\n  // POST a user\r\n  postUser = async (body, password, confirmPassword) => {\r\n    if (password !== confirmPassword) {\r\n      const customError = {error: [\"Passwords do not match\"]};\r\n      return customError;\r\n    } else {\r\n      const response = await this.api(\"https://course-platform-server.herokuapp.com/api/users\", 'POST', body);\r\n      if (response.status === 201) {\r\n        return null;\r\n      } else if (response.status === 400) {\r\n        return response.json();\r\n      }\r\n    }\r\n  }\r\n\r\n  // GET course\r\n  getCourses = async (id) => {\r\n    let response;\r\n\r\n    if (id) {\r\n      response = await this.api(`https://course-platform-server.herokuapp.com/api/courses/${ id }`, 'GET');\r\n    } else {\r\n      response = await this.api(\"https://course-platform-server.herokuapp.com/api/courses\", 'GET');\r\n    }\r\n\r\n    if (response.status === 200) {\r\n      return response.json();\r\n    } else {\r\n      return new Error();\r\n    }\r\n  }\r\n\r\n  // POST course\r\n  postCourse = async (body) => {\r\n    const { authenticatedUser } = this.state;\r\n    const { password } = this.state;\r\n    const { emailAddress } = authenticatedUser;\r\n\r\n    const response = await this.api(\"https://course-platform-server.herokuapp.com/api/courses\", 'POST', body, true, { emailAddress, password });\r\n    if (response.status === 201) {\r\n      return response.json();\r\n    } else if (response.status === 400) {\r\n      return response.json();\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  // PUT (update) a course\r\n  putCourse = async (id, body) => {\r\n    const { authenticatedUser } = this.state;\r\n    const { password } = this.state;\r\n    const { emailAddress } = authenticatedUser;\r\n\r\n    const response = await this.api(`https://course-platform-server.herokuapp.com/api/courses/${ id }`, 'PUT', body, true, { emailAddress, password });\r\n    if (response.status === 204) {\r\n      return null;\r\n    } else if (response.status === 400) {\r\n      return response.json();\r\n    } else if (response.status === 403) {\r\n      return null;\r\n    } else {\r\n      return new Error();\r\n    }\r\n  }\r\n  \r\n  // DELETE course\r\n  deleteCourse = async (id) => {\r\n    const { authenticatedUser } = this.state;\r\n    const { password } = this.state;\r\n    const { emailAddress } = authenticatedUser;\r\n\r\n    const response = await this.api(`https://course-platform-server.herokuapp.com/api/courses/${ id }`, 'DELETE', null, true, { emailAddress, password });\r\n    if (response.status === 204) {\r\n      return response.status;\r\n    } else if (response.status === 403) {\r\n      return response.status;\r\n    } else {\r\n      return new Error();\r\n    }\r\n  } \r\n\r\n  render() {\r\n    const { authenticatedUser, password } = this.state;\r\n    const value = {\r\n      authenticatedUser,\r\n      password,\r\n      actions: {\r\n        getUser: this.getUser,\r\n        postUser: this.postUser,\r\n        getCourses: this.getCourses,\r\n        postCourse: this.postCourse,\r\n        putCourse: this.putCourse,\r\n        deleteCourse: this.deleteCourse,\r\n        signIn: this.signIn,\r\n        signOut: this.signOut\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Context.Provider value={value}>\r\n        {this.props.children}\r\n      </Context.Provider>  \r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n// Wraps Context around Component\r\nexport default function withContext(Component) {\r\n  return function ContextComponent(props) {\r\n    return (\r\n      <Context.Consumer>\r\n        {context => <Component {...props} context={context} />}\r\n      </Context.Consumer>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { Consumer } from '../Context';\r\n\r\n// Directs user to secured route if authenticated (signed in)\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Consumer>\r\n      {context => (\r\n        <Route\r\n          {...rest}\r\n          render={props => context.authenticatedUser === null ? (\r\n              <Redirect to={{\r\n                pathname: '/signin',\r\n                state: { from: props.location }\r\n              }} />\r\n            ) : (\r\n              <Component {...props} />\r\n            )\r\n          }\r\n        />\r\n    )}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\n\r\nconst UnhandledError = () => {\r\n  return(\r\n    <div className=\"bounds\">\r\n      <div className=\"message--container\">\r\n        <div className=\"message--text\">\r\n          <h1>500</h1>\r\n          <h1>Unexpected Error.</h1>\r\n        </div>\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default UnhandledError;","import React from 'react';\r\n\r\nconst Forbidden = () => {\r\n  return(\r\n    <div className=\"bounds\">\r\n      <div className=\"message--container\">\r\n        <div className=\"message--text\">\r\n          <h1>401</h1>\r\n          <h1>Forbidden.</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Forbidden;","import React from 'react';\r\n\r\nclass DeleteCourse extends React.Component {\r\n\r\n  state = {\r\n    course: {}\r\n  }\r\n\r\n  // retrieves course data by id parameter\r\n  componentDidMount() {\r\n    const { context, match } = this.props;\r\n\r\n    context.actions.getCourses(match.params.id)\r\n    .then(data => {\r\n      if (data === null) {\r\n        this.props.history.push(\"/notfound\");\r\n      } else {\r\n        this.setState({\r\n          course: data\r\n        });\r\n      }\r\n    })\r\n    .catch(err => {\r\n      this.props.history.push(\"/error\");\r\n    }); \r\n  }\r\n\r\n  // Delete's course if authenticated user owns course\r\n  isOwnerDeleteCourse = (id) => {\r\n    const { context } = this.props;\r\n    const { course } = this.state;\r\n    const { owner } = course;\r\n\r\n    if (owner.id === context.authenticatedUser.id) {\r\n      context.actions.deleteCourse(id)\r\n        .then(data => this.props.history.push(\"/\"))\r\n        .catch(err => {\r\n          this.props.history.push(\"/error\");\r\n        });\r\n    } else {\r\n      this.props.history.push(\"/forbidden\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { course } = this.state;\r\n    const { id, title } =  course;\r\n\r\n    return(\r\n      <div className=\"bounds\">\r\n        <div className=\"message--container message--delete\">\r\n          <div className=\"message--text\">\r\n            <h1>Are you sure you want to delete course:</h1>\r\n            <h1>{ title }</h1>\r\n            <div className=\"button-container delete\">\r\n              <button className=\"button delete-button\" onClick={ () => this.isOwnerDeleteCourse( id )}>\r\n                <span>Delete Course</span>\r\n              </button>  \r\n              <button className=\"button cancel-button\" onClick={(e) => {e.preventDefault(); this.props.history.push(`/courses/${ id }`)}}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteCourse;","import React from 'react';\nimport './styles/global.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\n// import external components\nimport CourseDetail from './components/CourseDetail';\nimport Courses from './components/Courses';\nimport CreateCourse from './components/CreateCourse';\nimport Header from './components/Header';\nimport UpdateCourse from './components/UpdateCourse';\nimport UserSignIn from './components/UserSignIn';\nimport UserSignOut from './components/UserSignOut';\nimport UserSignUp from './components/UserSignUp';\nimport NotFound from './components/NotFound';\nimport PrivateRoute from './components/PrivateRoute';\nimport UnhandledError from './components/UnhandledError';\nimport Forbidden from './components/Forbidden';\nimport DeleteCourse from './components/DeleteCourse';\n\n// import higher order function\nimport withContext from './Context';\n\n// components wrapped around imported higher order function\nconst HeaderWithContext = withContext(Header);\nconst CoursesWithContext = withContext(Courses);\nconst CreateCourseWithContext = withContext(CreateCourse);\nconst CourseDetailWithContext = withContext(CourseDetail);\nconst UpdateCourseWithContext = withContext(UpdateCourse);\nconst UserSignInWithContext = withContext(UserSignIn);\nconst UserSignUpWithContext = withContext(UserSignUp);\nconst UserSignOutWithContext = withContext(UserSignOut);\nconst DeleteCourseWithContext = withContext(DeleteCourse);\n\nconst App = () => {\n  return (\n    <div className=\"root\">\n      <div>\n        <Router>\n          <HeaderWithContext />\n\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={CoursesWithContext} />\n            <PrivateRoute exact path=\"/courses/create\" component={CreateCourseWithContext} />\n            <PrivateRoute exact path=\"/courses/:id\" component={CourseDetailWithContext} />\n            <PrivateRoute exact path=\"/courses/:id/update\" component={UpdateCourseWithContext} />\n            <PrivateRoute exact path=\"/courses/:id/delete\" component={DeleteCourseWithContext} />\n            <Route exact path=\"/signin\" component={UserSignInWithContext} />\n            <Route exact path=\"/signup\" component={UserSignUpWithContext} />\n            <Route exact path=\"/signout\" component={UserSignOutWithContext} />\n            <Route exact path=\"/error\" component={UnhandledError} />\n            <Route exact path=\"/forbidden\" component={Forbidden} />\n            <Route exact path=\"/notfound\" component={NotFound} />\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from './Context';\n\nReactDOM.render(\n<Provider>\n  <App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}